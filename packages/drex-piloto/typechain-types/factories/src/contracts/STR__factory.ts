/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { STR, STRInterface } from "../../../src/contracts/STR";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RealDigital",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestToBurn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestToMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161036e38038061036e83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6102db806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637d637f871461003b5780638a8b198f14610050575b600080fd5b61004e610049366004610263565b610063565b005b61004e61005e366004610263565b61017e565b60005460405163f16dfbe960e01b81523360048201526001600160a01b039091169063f16dfbe990602401602060405180830381865afa1580156100ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100cf919061027c565b6101165760405162461bcd60e51b8152602060048201526013602482015272135d5cdd081899481c185c9d1a58da5c185b9d606a1b60448201526064015b60405180910390fd5b6000546040516340c10f1960e01b8152336004820152602481018390526001600160a01b03909116906340c10f19906044015b600060405180830381600087803b15801561016357600080fd5b505af1158015610177573d6000803e3d6000fd5b5050505050565b60005460405163f16dfbe960e01b81523360048201526001600160a01b039091169063f16dfbe990602401602060405180830381865afa1580156101c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ea919061027c565b61022c5760405162461bcd60e51b8152602060048201526013602482015272135d5cdd081899481c185c9d1a58da5c185b9d606a1b604482015260640161010d565b60005460405163079cc67960e41b8152336004820152602481018390526001600160a01b03909116906379cc679090604401610149565b60006020828403121561027557600080fd5b5035919050565b60006020828403121561028e57600080fd5b8151801515811461029e57600080fd5b939250505056fea2646970667358221220676d624b74bd3798f6d6ede758eb684600f73b7d70208305df8120f00a04aaa164736f6c63430008130033";

type STRConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: STRConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class STR__factory extends ContractFactory {
  constructor(...args: STRConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token, overrides || {});
  }
  override deploy(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(token, overrides || {}) as Promise<
      STR & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): STR__factory {
    return super.connect(runner) as STR__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): STRInterface {
    return new Interface(_abi) as STRInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): STR {
    return new Contract(address, _abi, runner) as unknown as STR;
  }
}
