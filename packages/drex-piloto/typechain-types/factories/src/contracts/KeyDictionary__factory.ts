/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  KeyDictionary,
  KeyDictionaryInterface,
} from "../../../src/contracts/KeyDictionary";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract RealDigital",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "KeyRequested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_taxId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bankNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_account",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_branch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "addAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "authorizeKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getCustomerData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "taxId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "bankNumber",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "account",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "branch",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
          {
            internalType: "bool",
            name: "registered",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct KeyDictionary.CustomerData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getKey",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_taxId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bankNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_account",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_branch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "requestKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_taxId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_bankNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_account",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_branch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "updateData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c16380380610c1683398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b83806100936000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806393790f441161005b57806393790f4414610155578063a33c9a361461018c578063c82d5d861461019f578063e9c1d83d146101b257600080fd5b80633034554314610082578063789d392a1461009757806382007af1146100e0575b600080fd5b610095610090366004610a29565b6101c5565b005b6100c36100a5366004610a7a565b6000908152600160205260409020600401546001600160a01b031690565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f36100ee366004610a7a565b61048b565b6040516100d79190815181526020808301519082015260408083015190820152606080830151908201526080808301516001600160a01b039081169183019190915260a08084015115159083015260c092830151169181019190915260e00190565b61017e610163366004610a93565b6001600160a01b031660009081526002602052604090205490565b6040519081526020016100d7565b61009561019a366004610a29565b610557565b6100956101ad366004610a29565b61070d565b6100956101c0366004610ab5565b610795565b60005460405163f16dfbe960e01b81523360048201526001600160a01b039091169063f16dfbe990602401602060405180830381865afa15801561020d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102319190610ad7565b6102565760405162461bcd60e51b815260040161024d90610af9565b60405180910390fd5b600086815260016020526040902060040154600160a01b900460ff16156102b85760405162461bcd60e51b815260206004820152601660248201527512d95e48185b1c9958591e481c9959da5cdd195c995960521b604482015260640161024d565b600086815260016020526040902060050154336001600160a01b039091160361031c5760405162461bcd60e51b815260206004820152601660248201527543616e6e6f742072657175657374206f776e206b657960501b604482015260640161024d565b6040516bffffffffffffffffffffffff193360601b16602082015242603482015260009060540160408051808303601f190181528282528051602091820120606080850184528b855242838601908152845160e0810186528c81528085018c90528086018b90528083018a90526001600160a01b03898116608080840191909152600060a08085018290523360c08087018290528c8c019687528984526003808c52938c90209c518d55965160018d01559451805160028d0155808a0151928c0192909255818a015160048c01558187015160058c01559181015160068b018054938301519185166001600160a81b031990941693909317600160a01b911515919091021790915590920151600790970180546001600160a01b0319169790921696909617905583519485529184018190529183018a90529092507fcc3b754f76b710137fc464bbebc86e795542475cf6fdac7b570c72889b9fe863910160405180910390a150505050505050565b6104df6040518060e001604052806000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160001515815260200160006001600160a01b031681525090565b50600090815260016020818152604092839020835160e0810185528154815292810154918301919091526002810154928201929092526003820154606082015260048201546001600160a01b038082166080840152600160a01b90910460ff16151560a083015260059092015490911660c082015290565b60005460405163f16dfbe960e01b81523360048201526001600160a01b039091169063f16dfbe990602401602060405180830381865afa15801561059f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c39190610ad7565b6105df5760405162461bcd60e51b815260040161024d90610af9565b6000868152600160205260409020600501546001600160a01b031633146106485760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c79206f776e65722063616e207570646174652064617461000000000000604482015260640161024d565b6040805160e0810182529586526020808701958652868201948552606087019384526001600160a01b0392831660808801818152600060a08a018181523360c08c019081528c835260018087528784209c518d559a519a8c019a909a5597516002808c0191909155965160038b0155905160048a01805498519187166001600160a81b031990991698909817600160a01b91151591909102179096559551600590970180546001600160a01b0319169790931696909617909155928252909252902055565b60005460405163f16dfbe960e01b81523360048201526001600160a01b039091169063f16dfbe990602401602060405180830381865afa158015610755573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107799190610ad7565b6106485760405162461bcd60e51b815260040161024d90610af9565b60005460405163f16dfbe960e01b81523360048201526001600160a01b039091169063f16dfbe990602401602060405180830381865afa1580156107dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108019190610ad7565b61081d5760405162461bcd60e51b815260040161024d90610af9565b600082815260036020526040902054811461087a5760405162461bcd60e51b815260206004820152601d60248201527f50726f706f73616c496420646f6573206e6f74206d61746368206b6579000000604482015260640161024d565b6000818152600160205260409020600501546001600160a01b031633146108f15760405162461bcd60e51b815260206004820152602560248201527f4f6e6c79206f776e65722063616e20617574686f72697a65206b6579207472616044820152643739b332b960d91b606482015260840161024d565b60008281526003602052604090206001015442906109129062093a80610b26565b116109525760405162461bcd60e51b815260206004820152601060248201526f141c9bdc1bdcd85b08195e1c1a5c995960821b604482015260640161024d565b6000918252600360208181526040808520848652600180845282872060028084015482558387015492820192909255600480840154828401556005808501549783019790975560068401805491830180546001600160a01b03198082166001600160a01b039586169081178455845460ff600160a01b91829004161515026001600160a81b03199093161791909117909155600790950154979092018054909416968116969096179092559054909316855291905290912055565b80356001600160a01b0381168114610a2457600080fd5b919050565b60008060008060008060c08789031215610a4257600080fd5b8635955060208701359450604087013593506060870135925060808701359150610a6e60a08801610a0d565b90509295509295509295565b600060208284031215610a8c57600080fd5b5035919050565b600060208284031215610aa557600080fd5b610aae82610a0d565b9392505050565b60008060408385031215610ac857600080fd5b50508035926020909101359150565b600060208284031215610ae957600080fd5b81518015158114610aae57600080fd5b602080825260139082015272135d5cdd081899481c185c9d1a58da5c185b9d606a1b604082015260600190565b80820180821115610b4757634e487b7160e01b600052601160045260246000fd5b9291505056fea2646970667358221220794a70dee9ab28d65c8c3a572529d9c7ac476d5a8e5a8393d558e9c35062fe6d64736f6c63430008130033";

type KeyDictionaryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeyDictionaryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KeyDictionary__factory extends ContractFactory {
  constructor(...args: KeyDictionaryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token, overrides || {});
  }
  override deploy(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(token, overrides || {}) as Promise<
      KeyDictionary & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): KeyDictionary__factory {
    return super.connect(runner) as KeyDictionary__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeyDictionaryInterface {
    return new Interface(_abi) as KeyDictionaryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): KeyDictionary {
    return new Contract(address, _abi, runner) as unknown as KeyDictionary;
  }
}
